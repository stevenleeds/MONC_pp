[outputs]
lzlib=true ; Compress output using zlib?
lcross_xy=true ; Produce xy cross-sections? Mais oui
lcross_xz=true ; Produce xz cross-sections? Mais oui
lcross_yz=true ; Produce yz cross-sections? Mais oui
ldiag_xz=true ; Produce xy diagnostics? Mais oui
ldiag_yz=true ; Produce yz diagnostics? Mais oui
ldiag_int=true ; Produce vertically integrated diagnostics? Mais oui
lsamp=true ; Produce sampled diagnostics? Mais oui
lspec=false ; Produce spectral diagnostics? Mais oui
lclouds=false ; Produce tar-ball with 3D cloud and precipitation fields for storage? Mais oui

; where to take cross sections (currently just grid numbers, i.e., no interpolation)
; has to be an array
[domain]
;xsel=[256, 257]
;ysel=[256, 257]
; 500, 750, 800, 850, 900, 1km, 2km 
;zsel=[20, 30, 32, 34, 36, 40,80]

;xsel = [240,241]
;ysel = [240,241]
;zsel = [20, 30, 32, 34, 36, 40,80]

; 4km domain
xsel = [80,81]
ysel = [80,81]
zsel = [0,20,32,40,80,120,160]

dx=25.
dy=25.

; Between which level to produce spectra (can be multiple sets, formatted as [lowerlevel,upperlevel+1], as python array indexing works)
spectralevelsbot=[10,20]
spectralevelstop=[20,30]

; Option to crop the boundaries in the horizontal plane
nboundlines=0
